apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-devship-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
      - "nginx.devship.localhost"
    - secretName: nginx-server-certs
  rules:
    - host: "nginx.devship.localhost"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-devship-svc
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-devship-svc
spec:
  type: LoadBalancer
  selector:
    app: nginx-devship
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-devship
  labels:
    app: nginx-devship
spec:
  selector:
    matchLabels:
      app: nginx-devship
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx-devship
    spec:
      containers:
      - name: nginx-devship
        image: registry.devship.localhost:5000/nginx:alpine
        lifecycle:
          preStop:
            exec:
              command: ["/usr/sbin/nginx", "-s", "quit"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
          - containerPort: 80
            name:  nginx-devship
